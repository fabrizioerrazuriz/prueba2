name: CI/CD for ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Configurar las credenciales de AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      # Paso 3: Loguearse en Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Paso 4: Crear el repositorio de ECR si no existe
      - name: Create ECR repository if not exists
        run: |
          aws ecr describe-repositories --repository-name prueba-2 || aws ecr create-repository --repository-name prueba-2 --region us-east-2

      # Paso 5: Construir la imagen Docker
      - name: Build Docker image
        run: |
          IMAGE_URI=971422693729.dkr.ecr.us-east-2.amazonaws.com/prueba-2:latest
          docker build -t $IMAGE_URI .
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      # Paso 6: Push de la imagen Docker a Amazon ECR
      - name: Push Docker image to Amazon ECR
        run: |
          docker push $IMAGE_URI

      # Paso 7: Desplegar la imagen en ECS
      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-definition.json  # Define tu archivo task definition aquí
          service: api-service  # Cambia por tu nombre de servicio ECS
          cluster: MyCluster  # Cambia por tu nombre de clúster ECS
          wait-for-service-stability: true
